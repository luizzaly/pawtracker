<!DOCTYPE html>
<html>

<head>
  <meta charset='utf-8' />
  <title>Update a feature in realtime</title>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v1.1.0/mapbox-gl.js'></script>
  <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v1.1.0/mapbox-gl.css' rel='stylesheet' />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.min.js"></script>
  <style>
    body {
      margin: 0;
      padding: 0;
    }

    #map {
      position: absolute;
      top: 6%;
      bottom: 0;
      width: 100%;
    }
  </style>
</head>

<body>
  <nav>
    <a href="/map"> <img class="logo" src="/images/ptracker.png" alt=""></a>
    <a href="/auth/logout"><i class="fas fa-sign-out-alt"></i></a>
  </nav>

  <div id='map'></div>

  <script src='//d3js.org/d3.v3.min.js' charset='utf-8'></script>
  <script>
    function fakeApiRequest() {
      const defaultLat = 52.473589
      const defaultLong = 13.402702
      const dif1 = Math.random() / 900 - 0.008
      const dif2 = Math.random() / 900 - 0.008
      return [
        defaultLong + dif2,
        defaultLat + dif1,
      ]
    }

    mapboxgl.accessToken = 'pk.eyJ1IjoibHVpenphbHkiLCJhIjoiY2p4dW5rdnRjMDJ5czNnbXk5cG9iMzdzciJ9.O1BubhULe8xO8cypdGAtCQ';
    var map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/streets-v11',

      center: fakeApiRequest(),
      zoom: 11.15,

    });

    map.on('load', function () {
      // We use D3 to fetch the JSON here so that we can parse and use it separately
      // from GL JS's use in the added source. You can use any request method (library
      // or otherwise) that you want.

      window.setInterval(async () => {
        const result = await fakeApiRequest()
      }, 100)

      d3.json('https://docs.mapbox.com/mapbox-gl-js/assets/hike.geojson', function (err, data) {
        if (err) throw err;

        // save full coordinate list for later
        var coordinates = data.features[0].geometry.coordinates;
        const startinPoint = fakeApiRequest()
        // start by showing just the first coordinate
        data.features[0].geometry.coordinates = [startinPoint];

        // add it to the map
        map.addSource('trace', { type: 'geojson', data: data });
        map.addLayer({
          "id": "trace",
          "type": "line",
          "source": "trace",
          "paint": {
            "line-color": "yellow",
            "line-opacity": 0.75,
            "line-width": 5
          }
        });
        const point = {
          "type": "FeatureCollection",
          "features": [{
            "type": "Feature",
            "properties": {},
            "geometry": {
              "type": "Point",
              "coordinates": [startinPoint]
            }
          }]
        };
        map.addSource('point', { type: 'geojson', data: point })
        map.addLayer({
          "id": "point",
          "source": "point",
          "type": "circle",
          "paint": {
            "circle-radius": 10,
            "circle-color": "#007cbf"
          }
        });


        // setup the viewport
        map.jumpTo({ 'center': fakeApiRequest(), 'zoom': 17 });
        map.setPitch(30);

        // on a regular basis, add more coordinates from the saved list and update the map
        var i = 0;
        var timer = window.setInterval(function () {
          const coord = fakeApiRequest()

          data.features[0].geometry.coordinates.push(coord);
          point.features[0].geometry.coordinates = [coord]
          map.getSource('point').setData(point)
          map.getSource('trace').setData(data);
          map.panTo(coord);
          i++;
          axios.post("http://localhost:3005/api/coordinates", { coord })
          console.log('bla', coord)
        }, 4000);
      });
    });
  </script>

  <div class="navigation-container">
    <a href="/profile"><i class="fas fa-user"></i> </a>
    <a href="/profile"><i class="fas fa-plus"></i></a>
    <a href="/map"><i class="fas fa-map-marker-alt"></i></a>
  </div>
</body>

</html>